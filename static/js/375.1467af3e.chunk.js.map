{"version":3,"file":"static/js/375.1467af3e.chunk.js","mappings":"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","sources":["assets/favorite.svg","webpack://aston-project/./src/componetns/shared/FavoriteButton/FavoriteButton.module.css?0807","componetns/shared/FavoriteButton/FavoriteButton.tsx","hooks/useFavorites.ts","webpack://aston-project/./src/componetns/shared/Table/Table.module.css?f7a0","componetns/shared/Table/Table.tsx","componetns/shared/Table/TibleLine/TableLine.tsx","webpack://aston-project/./src/componetns/Card/FullMovieCard/FullMovieCard.module.css?0db6","webpack://aston-project/./src/componetns/Card/FullMovieCard/RatingBlock/RatingBlock.module.css?c0f8","componetns/Card/FullMovieCard/RatingBlock/RatingBlock.tsx","componetns/Card/FullMovieCard/FullMovieCard.tsx","pages/Movie/Movie.tsx"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFavorite(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 32,\n    viewBox: \"0 0 24 24\",\n    fill: \"\",\n    width: 32,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.205 4.791a5.938 5.938 0 0 0-4.209-1.754A5.906 5.906 0 0 0 12 4.595a5.904 5.904 0 0 0-3.996-1.558 5.942 5.942 0 0 0-4.213 1.758c-2.353 2.363-2.352 6.059.002 8.412L12 21.414l8.207-8.207c2.354-2.353 2.355-6.049-.002-8.416z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFavorite);\nexport default __webpack_public_path__ + \"static/media/favorite.b5673b3c9a1d4a1e0c2768db72caa6ef.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"favBtn\":\"FavoriteButton_favBtn__00mzt\",\"favoriteIcon\":\"FavoriteButton_favoriteIcon__GsBoh\",\"favoriteIcon__active\":\"FavoriteButton_favoriteIcon__active__48bqv\"};","import PropTypes from 'prop-types'\n\nimport { ReactComponent as FavoriteIcon } from '../../../assets/favorite.svg'\nimport { Loader } from '../Loader/Loader'\n\nimport style from './FavoriteButton.module.css'\n\ntype Props = {\n  handleClick: () => void\n  isActive: boolean\n  isLoading: boolean\n}\n\nexport const FavoriteButton = (props: Props) => {\n  return (\n    <div className={style.favBtn}>\n      {props.isLoading ? (\n        <Loader />\n      ) : (\n        <FavoriteIcon\n          onClick={props.handleClick}\n          className={\n            props.isActive ? style.favoriteIcon__active : style.favoriteIcon\n          }\n        />\n      )}\n    </div>\n  )\n}\n\nFavoriteButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n}\n","import { useState } from 'react'\n\nimport { useAppDispatch, useAppSelector } from '../store/hooks'\nimport {\n  addFavoriteItem,\n  removeFavoriteItem,\n} from '../store/middleware/thunk/favoritesThunk'\n\nexport const useFavorite = (id: string) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const dispatch = useAppDispatch()\n  const isFavorite = useAppSelector(store =>\n    store.favoritesReducer.favorites.some(item => item.imdbID === id)\n  )\n\n  const toggleIsFavorite = async () => {\n    setIsLoading(true)\n    if (isFavorite) {\n      await dispatch(removeFavoriteItem(id))\n    } else {\n      await dispatch(addFavoriteItem(id))\n    }\n    setIsLoading(false)\n  }\n  return { isFavorite, toggleIsFavorite, isLoading }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"discriptionBlock__table\":\"Table_discriptionBlock__table__S9y5j\"};","import style from './Table.module.css'\n\nimport type { ReactNode } from 'react'\n\ntype Props = {\n  children: ReactNode\n}\n\nexport const Table = (props: Props) => {\n  return (\n    <table className={style.discriptionBlock__table}>\n      <tbody>{props.children}</tbody>\n    </table>\n  )\n}\n","type Props = {\n  name: string\n  values?: string\n  className?: string\n}\n\nexport const TableLine = (props: Props) => {\n  return (\n    <>\n      {props.values && (\n        <tr>\n          <td>{props.name}</td>\n          <td>\n            <div className={props.className}>{props.values}</div>\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"FullMovieCard_movie__1k8OC\",\"lightCard\":\"FullMovieCard_lightCard__aj+cA\",\"mediaBlock\":\"FullMovieCard_mediaBlock__Mmlh5\",\"mediaBlock__poster\":\"FullMovieCard_mediaBlock__poster__BO2vd\",\"mediaBlock__raiting\":\"FullMovieCard_mediaBlock__raiting__kS8LA\",\"discriptionBlock\":\"FullMovieCard_discriptionBlock__HwykQ\",\"discriptionBlock__name\":\"FullMovieCard_discriptionBlock__name__T9SYG\",\"ratingBlock\":\"FullMovieCard_ratingBlock__Jv39N\",\"rating\":\"FullMovieCard_rating__JyUC9\",\"etcBlock\":\"FullMovieCard_etcBlock__c6KMF\",\"etcBlock__discription\":\"FullMovieCard_etcBlock__discription__UcqON\"};","// extracted by mini-css-extract-plugin\nexport default {\"rating\":\"RatingBlock_rating__dpY+U\",\"ratingName\":\"RatingBlock_ratingName__xRh-M\",\"ratingValue\":\"RatingBlock_ratingValue__dIOeP\"};","import style from './RatingBlock.module.css'\n\nimport type { PropsWithChildren } from 'react'\n\ninterface Props {\n  ratingName: string\n  value?: string\n}\n\nconst valueColor = (rating: number) => {\n  if (rating >= 7) return { color: '#60C60A' }\n  else if (rating < 7 && rating >= 5) return { color: '#FD9B25' }\n  else return { color: '#F84B2F' }\n}\n\nexport const RatingBlock = (props: PropsWithChildren<Props>) => {\n  const value = Number(props.value)\n  return (\n    <div className={style.rating}>\n      <span className={style.ratingName}>{props.ratingName}:</span>\n      <span className={style.ratingValue} style={valueColor(value)}>\n        {value}\n      </span>\n    </div>\n  )\n}\n","import classNames from 'classnames'\n\nimport { Table } from '../../shared/Table/Table'\nimport { TableLine } from '../../shared/Table/TibleLine/TableLine'\nimport { FavoriteButton } from '../../shared/FavoriteButton/FavoriteButton'\nimport { useFavorite } from '../../../hooks/useFavorites'\nimport { useChekTheme } from '../../../hooks/useCheckTheme'\nimport { useAuth } from '../../../hooks/useAuth'\n\nimport style from './FullMovieCard.module.css'\nimport { RatingBlock } from './RatingBlock/RatingBlock'\n\nimport type { FullDescriptionMovie } from '../../../types/sharedType'\n\ntype Props = {\n  movieData: FullDescriptionMovie\n}\n\nexport const FullMovieCard = ({ movieData }: Props) => {\n  const theme = useChekTheme(style.lightCard)\n  const { isFavorite, toggleIsFavorite, isLoading } = useFavorite(\n    movieData.imdbID\n  )\n  const { isAuth } = useAuth()\n\n  return (\n    <div className={classNames(style.movie, theme)}>\n      <div className={style.discriptionBlock__name}>\n        <h2>{movieData.Title}</h2>\n        {isAuth && (\n          <FavoriteButton\n            handleClick={toggleIsFavorite}\n            isActive={isFavorite}\n            isLoading={isLoading}\n          />\n        )}\n      </div>\n\n      <div className={style.mediaBlock}>\n        <img src={movieData.Poster} className={style.mediaBlock__poster} />\n        <div className={style.mediaBlock__raiting}>\n          <RatingBlock ratingName={'IMDb'} value={movieData.imdbRating} />\n        </div>\n      </div>\n\n      <div className={style.discriptionBlock}>\n        <Table>\n          <TableLine name={'Жанр:'} values={movieData.Genre} />\n          <TableLine name={'Страна:'} values={movieData.Country} />\n          <TableLine name={'Год:'} values={movieData.Year} />\n          <TableLine name={'Длительность:'} values={movieData.Runtime} />\n          <TableLine name={'Режисер:'} values={movieData.Director} />\n          <TableLine name={'В главных ролях:'} values={movieData.Actors} />\n          <TableLine name={'Сценарий:'} values={movieData.Writer} />\n          <TableLine name={'Премьера в Мире:'} values={movieData.Released} />\n          <TableLine\n            name={'Рейтин mpaa:'}\n            values={movieData.Rated}\n            className={style.rating}\n          />\n        </Table>\n      </div>\n      <div className={style.etcBlock}>\n        <section className={style.etcBlock__discription}>\n          <h3>Описание</h3>\n          <p>{movieData.Plot}</p>\n        </section>\n      </div>\n    </div>\n  )\n}\n","import { useParams } from 'react-router-dom'\n\nimport { FullMovieCard } from '../../componetns/Card/FullMovieCard/FullMovieCard'\nimport { useGetMovieByIdQuery } from '../../store/rtkquery/moviesApi'\nimport { Preloader } from '../../componetns/shared/Preloader/Preloader'\n\nexport const Movie = () => {\n  const { id } = useParams<{ id: string | undefined }>()\n  const { data, isLoading } = useGetMovieByIdQuery(id)\n\n  if (isLoading) {\n    return <Preloader />\n  }\n  return <FullMovieCard movieData={data} />\n}\n"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgFavorite","_ref","svgRef","title","titleId","props","height","viewBox","fill","width","xmlns","ref","id","d","ForwardRef","FavoriteButton","_jsx","className","style","children","isLoading","Loader","FavoriteIcon","onClick","handleClick","isActive","useFavorite","setIsLoading","useState","dispatch","useAppDispatch","isFavorite","useAppSelector","store","favoritesReducer","favorites","some","item","imdbID","toggleIsFavorite","async","removeFavoriteItem","addFavoriteItem","Table","TableLine","_Fragment","values","_jsxs","name","RatingBlock","value","Number","ratingName","rating","color","FullMovieCard","movieData","theme","useChekTheme","isAuth","useAuth","classNames","Title","src","Poster","imdbRating","Genre","Country","Year","Runtime","Director","Actors","Writer","Released","Rated","Plot","Movie","useParams","data","useGetMovieByIdQuery","Preloader"],"sourceRoot":""}