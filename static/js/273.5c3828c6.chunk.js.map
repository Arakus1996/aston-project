{"version":3,"file":"static/js/273.5c3828c6.chunk.js","mappings":"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","sources":["webpack://aston-project/./src/componetns/Card/MovieCard/MovieCard.module.css?9feb","componetns/Card/MovieCard/MovieCard.tsx","webpack://aston-project/./src/componetns/shared/Pagination/Pagination.module.css?02a9","componetns/shared/Pagination/Pagination.tsx","webpack://aston-project/./src/componetns/MovieCards/MovieCards.module.css?773d","componetns/MovieCards/MovieCards.tsx","assets/favorite.svg","webpack://aston-project/./src/componetns/shared/FavoriteButton/FavoriteButton.module.css?0807","componetns/shared/FavoriteButton/FavoriteButton.tsx","hooks/useFavorites.ts","pages/home/Home.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieCard\":\"MovieCard_movieCard__VPJIl\",\"lightCard\":\"MovieCard_lightCard__VMIbE\",\"movieCard_info\":\"MovieCard_movieCard_info__2Woee\",\"moviePoster\":\"MovieCard_moviePoster__Ul4WQ\",\"movieInfo_name\":\"MovieCard_movieInfo_name__H19ae\",\"movieInfo_description\":\"MovieCard_movieInfo_description__StlM7\",\"movieInfo_btn\":\"MovieCard_movieInfo_btn__gD-WT\"};","import { useNavigate } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { useChekTheme } from '../../../hooks/useCheckTheme'\nimport { FavoriteButton } from '../../shared/FavoriteButton/FavoriteButton'\nimport { useFavorite } from '../../../hooks/useFavorites'\nimport { useAuth } from '../../../hooks/useAuth'\n\nimport style from './MovieCard.module.css'\n\nimport type { ShortDescriptionMovie } from '../../../types/sharedType'\n\ntype Props = {\n  movieData: ShortDescriptionMovie\n}\n\nexport const MovieCard = ({ movieData }: Props) => {\n  const theme = useChekTheme(style.lightCard)\n  const { isAuth } = useAuth()\n\n  const navigate = useNavigate()\n  const handleClick = () => navigate(`/movie/${movieData.imdbID}`)\n  const { isFavorite, toggleIsFavorite, isLoading } = useFavorite(\n    movieData.imdbID\n  )\n\n  return (\n    <div className={classNames(style.movieCard, theme)}>\n      <img\n        className={style.moviePoster}\n        src={movieData.Poster}\n        onClick={handleClick}\n      />\n\n      <div className={classNames(style.movieCard_info)}>\n        <h2\n          className={classNames(style.movieInfo_name, theme)}\n          onClick={handleClick}\n        >\n          {movieData.Title}\n        </h2>\n        <p className={style.movieInfo_description}>\n          <b>Год:</b> {movieData.Year}\n        </p>\n        <div className={style.movieInfo_btn}>\n          {isAuth && (\n            <FavoriteButton\n              handleClick={toggleIsFavorite}\n              isActive={isFavorite}\n              isLoading={isLoading}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nMovieCard.propTypes = {\n  movieData: PropTypes.shape({\n    imdbID: PropTypes.string.isRequired,\n    Title: PropTypes.string.isRequired,\n    Poster: PropTypes.string.isRequired,\n    Year: PropTypes.string.isRequired,\n    Type: PropTypes.string.isRequired,\n  }),\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Pagination_wrapper__SMduL\",\"button\":\"Pagination_button__PRU9J\",\"active\":\"Pagination_active__HFgty\",\"disabled\":\"Pagination_disabled__GNrqk\"};","import { useSearchParams } from 'react-router-dom'\nimport ReactPaginate from 'react-paginate'\n\nimport style from './Pagination.module.css'\n\ntype Props = {\n  totalPages: number\n  page: number\n}\n\ntype PageChangeEvent = {\n  selected: number\n}\n\nexport const Pagination = ({ totalPages, page }: Props) => {\n  const [searchParams, setSearchParams] = useSearchParams()\n  const handlePageChange = ({ selected }: PageChangeEvent) => {\n    const page = String(selected + 1) || '1'\n    searchParams.set('page', page)\n    setSearchParams(searchParams)\n  }\n\n  return (\n    <ReactPaginate\n      onPageChange={handlePageChange}\n      pageRangeDisplayed={5}\n      pageCount={totalPages}\n      forcePage={page - 1}\n      renderOnZeroPageCount={null}\n      previousLabel='Назад'\n      nextLabel='Вперед'\n      containerClassName={style.wrapper}\n      pageClassName={style.button}\n      breakClassName={style.button}\n      previousClassName={style.button}\n      nextClassName={style.button}\n      activeLinkClassName={style.active}\n      disabledLinkClassName={style.disabled}\n    />\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"cardsBlock\":\"MovieCards_cardsBlock__-wLI4\"};","import { ShortDescriptionMovie } from '../../types/sharedType'\n\nimport { MovieCard } from '../Card/MovieCard/MovieCard'\nimport { Pagination } from '../shared/Pagination/Pagination'\n\nimport style from './MovieCards.module.css'\n\ntype Props = {\n  moviesData: ShortDescriptionMovie[]\n  page?: number\n  totalResults?: number\n}\n\nexport const MovieCards = ({ moviesData, totalResults, page }: Props) => {\n  return (\n    <>\n      <div className={style.cardsBlock}>\n        {moviesData &&\n          moviesData\n            .map(item => <MovieCard key={item.imdbID} movieData={item} />)\n            .reverse()}\n      </div>\n      {totalResults && page && (\n        <Pagination page={page} totalPages={totalResults / 10} />\n      )}\n    </>\n  )\n}\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFavorite(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 32,\n    viewBox: \"0 0 24 24\",\n    fill: \"\",\n    width: 32,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.205 4.791a5.938 5.938 0 0 0-4.209-1.754A5.906 5.906 0 0 0 12 4.595a5.904 5.904 0 0 0-3.996-1.558 5.942 5.942 0 0 0-4.213 1.758c-2.353 2.363-2.352 6.059.002 8.412L12 21.414l8.207-8.207c2.354-2.353 2.355-6.049-.002-8.416z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFavorite);\nexport default __webpack_public_path__ + \"static/media/favorite.b5673b3c9a1d4a1e0c2768db72caa6ef.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"favBtn\":\"FavoriteButton_favBtn__00mzt\",\"favoriteIcon\":\"FavoriteButton_favoriteIcon__GsBoh\",\"favoriteIcon__active\":\"FavoriteButton_favoriteIcon__active__48bqv\"};","import PropTypes from 'prop-types'\n\nimport { ReactComponent as FavoriteIcon } from '../../../assets/favorite.svg'\nimport { Loader } from '../Loader/Loader'\n\nimport style from './FavoriteButton.module.css'\n\ntype Props = {\n  handleClick: () => void\n  isActive: boolean\n  isLoading: boolean\n}\n\nexport const FavoriteButton = (props: Props) => {\n  return (\n    <div onClick={props.handleClick} className={style.favBtn}>\n      {props.isLoading ? (\n        <Loader />\n      ) : (\n        <FavoriteIcon\n          className={\n            props.isActive ? style.favoriteIcon__active : style.favoriteIcon\n          }\n        />\n      )}\n    </div>\n  )\n}\n\nFavoriteButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n}\n","import { useState } from 'react'\n\nimport { useAppDispatch, useAppSelector } from '../store/hooks'\nimport {\n  addFavoriteItem,\n  removeFavoriteItem,\n} from '../store/middleware/thunk/favoritesThunk'\n\nexport const useFavorite = (id: string) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const dispatch = useAppDispatch()\n  const isFavorite = useAppSelector(store =>\n    store.favoritesReducer.favorites.some(item => item.imdbID === id)\n  )\n\n  const toggleIsFavorite = async () => {\n    setIsLoading(true)\n    if (isFavorite) {\n      await dispatch(removeFavoriteItem(id))\n    } else {\n      await dispatch(addFavoriteItem(id))\n    }\n    setIsLoading(false)\n  }\n  return { isFavorite, toggleIsFavorite, isLoading }\n}\n","import { useSearchParams } from 'react-router-dom'\n\nimport { MovieCards } from '../../componetns/MovieCards/MovieCards'\nimport { useGetMoviesQuery } from '../../store/rtkquery/moviesApi'\nimport { Preloader } from '../../componetns/shared/Preloader/Preloader'\nimport { useAppSelector } from '../../store/hooks'\n\nexport const Home = () => {\n  const [searchParams] = useSearchParams()\n  const page = Number(searchParams.get('page')) || 1\n  const { data, isLoading, isFetching } = useGetMoviesQuery(page)\n  const isLoadingUserData = useAppSelector(store => store.userReducer.isLoading)\n  if (isLoading || isLoadingUserData || isFetching) {\n    return <Preloader />\n  }\n  return (\n    data && (\n      <MovieCards\n        moviesData={data.Search}\n        totalResults={Number(data.totalResults)}\n        page={page}\n      />\n    )\n  )\n}\n"],"names":["MovieCard","_ref","movieData","theme","useChekTheme","style","isAuth","useAuth","navigate","useNavigate","handleClick","concat","imdbID","isFavorite","toggleIsFavorite","isLoading","useFavorite","_jsxs","className","classNames","children","_jsx","src","Poster","onClick","Title","Year","FavoriteButton","isActive","Pagination","totalPages","page","searchParams","setSearchParams","useSearchParams","ReactPaginate","onPageChange","_ref2","selected","String","set","pageRangeDisplayed","pageCount","forcePage","renderOnZeroPageCount","previousLabel","nextLabel","containerClassName","pageClassName","breakClassName","previousClassName","nextClassName","activeLinkClassName","disabledLinkClassName","MovieCards","moviesData","totalResults","_Fragment","map","item","reverse","_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgFavorite","svgRef","title","titleId","props","height","viewBox","fill","width","xmlns","ref","id","d","ForwardRef","Loader","FavoriteIcon","setIsLoading","useState","dispatch","useAppDispatch","useAppSelector","store","favoritesReducer","favorites","some","async","removeFavoriteItem","addFavoriteItem","Home","Number","get","data","isFetching","useGetMoviesQuery","isLoadingUserData","userReducer","Preloader","Search"],"sourceRoot":""}